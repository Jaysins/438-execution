name: Terraform Plan & Apply

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  terraform_plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:  
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js Environment
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Or your desired version
        cache: 'npm'       # Cache dependencies

    - name: Install Dependencies
      run: npm install 

    - name: Build Project
      run: npm run build

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
      working-directory: terraform 

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: terraform 

    - name: Terraform Plan
      id: plan
      run: terraform plan -out tfplan
      continue-on-error: true
      working-directory: terraform 

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: steps.plan.outcome == 'failure'
      with:
        script: |
          const output = `Terraform plan failed:

          \`\`\`terraform
          ${{ steps.plan.outputs.stdout }}
          \`\`\`
          `
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  terraform_apply:
    if: github.event.pull_request.merged == true
    needs: terraform_plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: terraform
